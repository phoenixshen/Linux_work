" ~/.vim/sessions/npu.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 04 July 2016 at 18:16:03.
" Open this file in Vim and run :source % to restore your session.

set guioptions=
silent! set guifont=
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'molokai' | colorscheme molokai | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
exe "cd " . escape(expand("<sfile>:p:h"), ' ')
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +464 ~/codebase/sf1688/bare_matel/simulation/wifi/wifi_5g_phy_tx_non_ht_dup/code/wifi/wifi_5g_phy_tx_non_ht_dup.c
badd +339 ~/codebase/sf1688/bare_matel/simulation/wifi/common/mac/hal/hal_machw.c
badd +2089 ~/codebase/sf1688/bare_matel/simulation/wifi/common/mac/reg/reg_mac_core.h
badd +65 ~/codebase/sf1688/bare_matel/simulation/wifi/wifi_5g_phy_tx_vht/code/wifi/wifi_5g_phy_tx_vht.c
badd +1 ~/codebase/sf1688/bare_matel/simulation/wifi/common/mac/hal/hal_machw.h
badd +4 ~/codebase/sf1688/bare_matel/simulation/wifi/common/mac/reg/_reg_mac_core.h
badd +33 ~/.vim/sessions/npu.vim
badd +1 /tmp/vt0jGqy
badd +139 ~/.vim/bundle/vim-session/plugin/session.vim
badd +34 ~/.vim/bundle/vim-session/autoload/xolox/session.vim
badd +31 ~/.vim/bundle/vim-session/autoload/xolox/session/suggestions.vim
args /tmp/vMsdCNr
edit ~/.vim/bundle/vim-session/plugin/session.vim
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 31 + 112) / 225)
exe 'vert 2resize ' . ((&columns * 193 + 112) / 225)
argglobal
enew
" file NERD_tree_5
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
wincmd w
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 202 - ((49 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
202
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 31 + 112) / 225)
exe 'vert 2resize ' . ((&columns * 193 + 112) / 225)
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
let s:bufnr_save = bufnr("%")
let s:cwd_save = getcwd()
NERDTree ~/.vim/bundle/vim-session/plugin
if !getbufvar(s:bufnr_save, '&modified')
  let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:bufnr_save
  endif
endif
execute "cd" fnameescape(s:cwd_save)
1resize 53|vert 1resize 31|2resize 53|vert 2resize 193|
1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
